[gd_scene load_steps=22 format=2]

[ext_resource path="res://popochiu/Rooms/101/Room101.gd" type="Script" id=1]
[ext_resource path="res://addons/Popochiu/Engine/Objects/Prop/PopochiuProp.tscn" type="PackedScene" id=3]
[ext_resource path="res://popochiu/Rooms/101/Props/_NoInteraction/background.png" type="Texture" id=4]
[ext_resource path="res://popochiu/Rooms/101/Props/_NoInteraction/white.png" type="Texture" id=5]
[ext_resource path="res://popochiu/Rooms/101/Props/_NoInteraction/CRTFrame.png" type="Texture" id=6]
[ext_resource path="res://addons/crt_shader/ShaderScreen.material" type="Material" id=7]
[ext_resource path="res://popochiu/Fonts/Roadrage-owgBd.otf" type="DynamicFontData" id=8]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float BarrelPower =1.1;

vec2 distort(vec2 p) 
{

	float angle = p.y / p.x;
	float theta = atan(p.y,p.x);
	float radius = pow(length(p), BarrelPower);
	
	p.x = radius * cos(theta);
	p.y = radius * sin(theta);
	
	return 0.5 * (p + vec2(1.0,1.0));
}
void fragment()
{
	
vec2 xy = SCREEN_UV * 2.0;
xy.x -= 1.0;
xy.y -= 1.0;

float d = length(xy);
if(d < 1.5){
	xy = distort(xy);
}
else{
	xy = SCREEN_UV;
}
COLOR = texture(SCREEN_TEXTURE,xy);
}



"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/BarrelPower = 1.1

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float color_bleeding = 0.9;
uniform float bleeding_range = 2;
uniform float screen_width = 1024;
void fragment()
{
	float pixel_size = 1.0/screen_width*bleeding_range;
	vec4 color_left = texture(SCREEN_TEXTURE,SCREEN_UV - vec2(pixel_size, 0));
	vec4 current_color = texture(SCREEN_TEXTURE,SCREEN_UV);
	current_color = current_color*vec4(color_bleeding,0.5,0.25,1);
	color_left = color_left*vec4(0.25,0.5,color_bleeding,1);
	COLOR.rgba = (current_color + color_left);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/color_bleeding = 1.0
shader_param/bleeding_range = 4.0
shader_param/screen_width = 320.0

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform float lines_distance = 4.0;
uniform float pixel_size = 2.0;
uniform float size_screen = 600;
uniform float scanline_alpha = 0.9;
uniform float lines_velocity = 30.0;

void fragment()
{
	float line_row = floor((SCREEN_UV.y * size_screen/pixel_size) + mod(TIME*lines_velocity, lines_distance));

	float n = 1.0 - ceil((mod(line_row,lines_distance)/lines_distance));

vec4 c = texture(SCREEN_TEXTURE,SCREEN_UV);
c = c - n*c*(1.0 - scanline_alpha);
c.a = 1.0;
COLOR = c;
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/lines_distance = 4.0
shader_param/pixel_size = 1.0
shader_param/size_screen = 320.0
shader_param/scanline_alpha = 0.9
shader_param/lines_velocity = 199.4

[sub_resource type="Shader" id=7]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/speed = 0.095
shader_param/minStrength = 0.14
shader_param/maxStrength = 0.281
shader_param/strengthScale = 5.0
shader_param/interval = 250.0
shader_param/detail = 15.0
shader_param/distortion = 0.239
shader_param/heightOffset = 0.0
shader_param/offset = 0.0

[sub_resource type="Environment" id=13]
background_mode = 4
background_energy = 7.02
ambient_light_color = Color( 0.901961, 0.423529, 0.313726, 1 )
ambient_light_energy = 9.0
ambient_light_sky_contribution = 0.21
tonemap_mode = 4
tonemap_exposure = 0.99
tonemap_white = 0.6
auto_exposure_enabled = true
auto_exposure_scale = 0.6
auto_exposure_min_luma = 1.1
auto_exposure_max_luma = 0.92
auto_exposure_speed = 4.05
ss_reflections_enabled = true
ssao_enabled = true
ssao_radius = 63.78
ssao_intensity = 84.73
ssao_radius2 = 44.25
ssao_intensity2 = 24.7
ssao_bias = 3.022
ssao_light_affect = 0.24
ssao_ao_channel_affect = 0.27
ssao_color = Color( 0.929412, 0.917647, 0.172549, 1 )
ssao_quality = 2
ssao_blur = 0
ssao_edge_sharpness = 25.34
dof_blur_far_distance = 13.9
dof_blur_far_transition = 37.57
dof_blur_far_amount = 0.35
dof_blur_near_enabled = true
dof_blur_near_distance = 2.12
dof_blur_near_transition = 2.21
dof_blur_near_amount = 0.3
dof_blur_near_quality = 2
glow_enabled = true
glow_levels/2 = true
glow_levels/3 = false
glow_levels/5 = false
glow_intensity = 2.13
glow_strength = 0.59
glow_bloom = 0.3
glow_blend_mode = 0
glow_hdr_threshold = 1.64
glow_hdr_luminance_cap = 54.67
glow_hdr_scale = 1.48
glow_bicubic_upscale = true
glow_high_quality = true
adjustment_enabled = true
adjustment_contrast = 1.54
adjustment_saturation = 1.3

[sub_resource type="ViewportTexture" id=12]
viewport_path = NodePath("Props/TitleText/Viewport")

[sub_resource type="Shader" id=9]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}

"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/speed = 0.076
shader_param/minStrength = 0.102
shader_param/maxStrength = 0.243
shader_param/strengthScale = 30.0
shader_param/interval = 20.0
shader_param/detail = 5.0
shader_param/distortion = 1.0
shader_param/heightOffset = 0.0
shader_param/offset = 0.9

[sub_resource type="DynamicFont" id=11]
size = 19
outline_size = 1
outline_color = Color( 0.0901961, 0.0196078, 0.0196078, 1 )
use_mipmaps = true
extra_spacing_char = 1
font_data = ExtResource( 8 )

[sub_resource type="Animation" id=14]
resource_name = "particle_a"

[node name="Room101" type="YSort"]
sort_enabled = false
script = ExtResource( 1 )
script_name = "101"

[node name="WalkableAreas" type="Node2D" parent="."]

[node name="Props" type="YSort" parent="."]
z_index = -50
sort_enabled = false

[node name="CRT" parent="Props" instance=ExtResource( 3 )]
position = Vector2( 160, 90 )
script_name = "CRT"
description = "CRT"
clickable = false
cursor = 1

[node name="CRTFrame" type="TextureRect" parent="Props/CRT"]
anchor_right = 0.735
margin_left = -160.0
margin_top = -90.0
margin_right = 160.0
margin_bottom = 90.0
texture = ExtResource( 6 )
expand = true
stretch_mode = 1

[node name="Shaders" type="Control" parent="Props/CRT/CRTFrame"]
margin_right = 320.0
margin_bottom = 180.0

[node name="Curvature" type="TextureRect" parent="Props/CRT/CRTFrame/Shaders"]
material = SubResource( 2 )
margin_right = 320.0
margin_bottom = 180.0
texture = ExtResource( 5 )
expand = true
stretch_mode = 2

[node name="ColorBleeding" type="TextureRect" parent="Props/CRT/CRTFrame/Shaders"]
material = SubResource( 4 )
margin_right = 320.0
margin_bottom = 180.0
texture = ExtResource( 5 )
expand = true

[node name="Scanline" type="TextureRect" parent="Props/CRT/CRTFrame/Shaders"]
material = SubResource( 6 )
use_parent_material = true
margin_right = 320.0
margin_bottom = 180.0
texture = ExtResource( 5 )
expand = true
stretch_mode = 2

[node name="CRT" type="TextureRect" parent="Props/CRT/CRTFrame/Shaders"]
material = ExtResource( 7 )
margin_right = 320.0
margin_bottom = 180.0
texture = ExtResource( 5 )
expand = true
stretch_mode = 2

[node name="Background" parent="Props" instance=ExtResource( 3 )]
position = Vector2( 160, 90 )
z_index = -1
monitoring = false
monitorable = false
script_name = "Background"
description = "Background"
clickable = false
baseline = 90
cursor = 1

[node name="WindShader" type="TextureRect" parent="Props/Background"]
material = SubResource( 8 )
margin_left = -160.0
margin_top = -90.0
margin_right = 160.0
margin_bottom = 90.0
texture = ExtResource( 4 )
expand = true
stretch_mode = 1

[node name="textenv" type="WorldEnvironment" parent="Props"]
environment = SubResource( 13 )

[node name="TitleText" parent="Props" instance=ExtResource( 3 )]
light_mask = 2
position = Vector2( 160, 90 )
z_index = -1
clickable = false
baseline = 180

[node name="pixelate" type="TextureRect" parent="Props/TitleText"]
light_mask = 2
margin_left = -160.0
margin_top = -106.0
margin_right = 160.0
margin_bottom = 91.0
texture = SubResource( 12 )
stretch_mode = 6
flip_v = true

[node name="Viewport" type="Viewport" parent="Props/TitleText"]
size = Vector2( 320, 180 )
size_override_stretch = true
own_world = true
transparent_bg = true
msaa = 2
fxaa = true
sharpen_intensity = 0.518
use_32_bpc_depth = true
audio_listener_enable_2d = true

[node name="TitleTextRich" type="RichTextLabel" parent="Props/TitleText/Viewport"]
light_mask = 2
material = SubResource( 10 )
anchor_left = 0.061
anchor_right = 0.151
margin_left = 202.0
margin_top = 84.0
margin_right = 1202.0
margin_bottom = 482.0
rect_min_size = Vector2( 1000, 0 )
rect_rotation = -17.3
rect_pivot_offset = Vector2( -50, 320 )
size_flags_horizontal = 3
size_flags_vertical = 3
custom_colors/default_color = Color( 0.737255, 0.631373, 0.203922, 1 )
custom_colors/font_color_shadow = Color( 0.0666667, 0.0627451, 0.0627451, 0.45098 )
custom_constants/shadow_offset_x = 3
custom_constants/shadow_offset_y = 6
custom_fonts/normal_font = SubResource( 11 )
bbcode_enabled = true
bbcode_text = " ROAD TRIP TO
    SHIT CREEK	"
text = " ROAD TRIP TO
    SHIT CREEK	"

[node name="Hotspots" type="Node2D" parent="."]

[node name="Regions" type="Node2D" parent="."]

[node name="Points" type="Node2D" parent="."]

[node name="Characters" type="YSort" parent="."]
position = Vector2( -4, 3 )
sort_enabled = false

[node name="TextureRect" type="TextureRect" parent="."]
margin_right = 40.0
margin_bottom = 40.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/particle_a = SubResource( 14 )
